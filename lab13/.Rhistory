box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 15) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 5,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3.5,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
View(UC_admit)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
coord_flip()+
labs(x = "Ethnicity", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Category==input$y & Ethnicity==input$z) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
coord_flip()+
labs(x = "Year", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Category==input$y & Ethnicity==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
coord_flip()+
labs(x = "Year", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Category==input$y & Ethnicity==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
labs(x = "Year", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_Campus$Academic_Yr <- as.factor(UC_Campus$Academic_Yr)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
),
box(title = "Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Category==input$y & Ethnicity==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
labs(x = "Year", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
),
box(title = "Admissions by Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Category==input$y & Ethnicity==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="gold", alpha=0.8) +
theme_light(base_size = 19) +
labs(x = "Year", y = "# of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
runApp('lab 13 apps.R')
runApp('lab 13 apps.R')
source('~/Desktop/BIS15W2021_lalvarez/lab13/shiny.R')
runApp('lab 13 by ethnicity.R')
runApp('lab 13 by ethnicity.R')
runApp('lab 13 by year.R')
